#!/usr/bin/python3.2        #EN PREMIERE LIGNE: executable (voir s'il ne faut pas changer la version en fonction du chemin d'accès vers l'interpréteu
# -*- coding: utf-8 -*-     #EN SECONDE LIGNE: ENCODING

                            
#import time                #ENSUITE: les modules importés
#import random


"""
Created on Tue Apr 23 10:36:29 2013

@author: Jessica Tanon
"""


class Eliza:                #ENFIN nom de la classe
 
	def __init__(self):
      	self.input = input #ste
        self.tokenInput = tokenInput #e-List 
        self.subjectInput = sujetInput #String 
        self.subjectResponse = sujetReponse #String 
        self.verb = verb #String 
        self.output = output #String 
        self.stack = stack #e-List 
        self.userName = userName #String (static)/Null 
        self.personInput = personInput #Int 
        self.personResponse = personResponse #Int 
        self.elapsedTime = elapsedTime 
        self.taggedSentence = taggedSentence #T-List 
        self.objectInput = objectInput #String 
        self.objectResponse = objectResponse #String 
        self.radical = radical #String 
        
        
        def tokenize():#decoupage en mots # KIRA
        def tagging(): #etiquetage # MARINE
        def timeout(): #relance conversation apres 120 secondes # JESSICA
       
        
        def stackRead(): #lecture de la pile # MARINE
        def stackWrite(): #ecriture de la pile # MARINE
    
        def defaultOutput(): #phrases bateau si aucune reponse # KIRA
        def getUserName(): #prenom de l'utilisateur # KIRA
        def oneInOneOut(): #une entree, une sortie # JESSICA
        def endConversation(): #bouton terminer # JESSICA
        def wait(): #si temps d'execution est ultra rapide #JESSICA
        def setPhrase(): #phrases a trous - KIRA - Liste correspondante: whatsTheWordHummingbird 
    
        def subjectCorrespondance(): #pronoms sujet # BENJAMIN
        def pronounCorrespondance(): # #COD, COI, possessifs reflexifs # BENJAMIN
        def verbIdentification(): # reconnaissance du verbe # BENJAMIN
        def negation(): # KIRA
    
        def lefff(): #fichier + champs verb # BENJAMIN
    
        def resetFields(): #sauf prenom et pile # MARINE
    
        def politeness(): #protocole de politesse # JESSICA
        def psychologicalVerbs(): ##verbes psychhologiques # JESSICA 

        def window(): #JESSICA
        #def easter(): #JESSICA
    
    
    
#hackneyedStuff: phrases bateau
#talkToMeMore: continuer à faire parler l'utilisateur en le relancant
#soThisIsFamily: membres de la famille
#soThisIsNotFamily: autres relations
#whatsTheWordHummingbird: phrases à trou (il manque un "mot", whats the "word"... hahaha... haha...ha...*ahem*)
#moneyMakingActivities: jobs

hackneyedStuff = ["Dites m'en plus.", "Dites m'en d'avantage.", "Je vois, continuez.", "Je comprends, continuez.", "Continuez."]

talktToMeMore = ["Pourriez-vous m'en dire plus?", "Que voulez-vous dire?", "Pourriez-vous élaborer?", "Pourriez-vous développer sur ce sujet?", 
"Que voulez-vous dire par là?", "Pourriez-vous m'en dire d'avantage?", "Qu'est-ce que cela veut dire pour vous?", "Ceci a-t-il un sens particulier pour vous?",
"Et que ceci vous inspire-t-il?"]  

soThisIsFamily = ["frère", "sœur", "père", "mère", "oncle", "tante", "cousin", "cousine", "grand-père", "grand-mère", "beau-père", 
"belle-mère", "beau-frère", "belle-sœur", "fils", "fille", "beau-fils", "belle-fille", "petit fils", "petite fille"]

soThisIsNotFamily = ["femme", "épouse", "mari", "époux", "ami", "amie", "collègue", "patron", "patronne", "voisin", "voisine", "copain", "copine", "petit-ami",
"petite amie", "pote", "propriétaire", "élève", "professeur"]

whatsTheWordHummingbird = [["Je vois, et que représente ", " ", " pour vous?"], ["Pourquoi dites-vous que ", " ", " ? "], ["Et que pense ", " ", " de ceci ?"],
["Pourquoi pensez-vous que ", " ", " ?"], ["Qu'est-ce qui vous faire dire que ", " ", " ?"]]

moneyMakingActivities = ["médecin", "docteur", "diététicien", "diététicienne", "électricien", "électricien", "plombier", "plombier", "architecte", "comptable", 
"boucher", "boulanger", "fromager", "femme de ménage", "pédiatre", "psychologue", "psychiatre", "psychiatre"] 






    
