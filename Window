# -*- coding: utf-8 -*-

import Tkinter
import time
import random
import eliza

"""
@author: BAbemonty, MChassang, KKiranova, JTanon
"""

class window(object):

    def __init__(self, root):
    
        #self.display.grid(side='left', expand=0, fill='both')
        #self.textfield.insert(0.0, data)
        
        self.eliza = eliza.eliza()
        self.root = root 
        #self.scroll = Tkinter.Scrollbar()
        self.scrollbar = Tkinter.Scrollbar(root)
        self.display = Tkinter.Text(root,yscrollcommand=self.scrollbar.set)
        self.scrollbar.config(command=self.display.yview)
        
        #)side='right', fill='y')
        self.main = Tkinter.Label(text = "Eliza", borderwidth = 10, font = "Arial 14")
        #self.display = Tkinter.Text(font = "Times 10", state = Tkinter.DISABLED)
        self.user_entry = Tkinter.Entry()
        self.send_button = Tkinter.Button(text = "Envoyer", command = self.speakToMe)
        self.quit_button = Tkinter.Button(text = "Quitter Eliza", command = self.root.quit) 
    
        self.user_entry.config(width = 85) # user's entry
        #self.display.config(width = 100, height = 15) # displays Eliza's answer

        self.entry = ""
        
        #Placement of widgets
        self.main.grid()
        self.display.grid()
        self.user_entry.grid()
        self.scrollbar.grid()
        self.send_button.grid(row = 6, column = 0, sticky = "s" + "e")
        self.quit_button.grid(row = 6, column = 0, sticky = "s" + "w")
        
        #Binding events to buttons/keys
        self.quit_button.bind("<Button-1>", self.byeThen)
        #self.quit_button.bind("<Key>", self.byeThen) #SUPPR ??? 
        self.quit_button.focus_set()
        
        self.user_entry.bind("<Key>", self.speakToMe)
        self.user_entry.focus_set()
        
        self.send_button.bind("<Button-1>", self.speakToMe)
        self.send_button.bind("<Key>", self.speakToMe)
        self.send_button.focus_set()
        
        #self.count = 0
        self.sayHelloEliza()


    #Makes Eliza display a hello message when launched
    def sayHelloEliza(self):
        self.display.config(state = Tkinter.NORMAL)
        self.display.insert("0.0", "Bonjour, je suis Eliza. Comment allez-vous ?")
        self.display.config(state = Tkinter.DISABLED)

    #speakToMe: Gets user input, Adds input to stack
    #Displays user's entry in main window while deleting it from user_entry window
    
    def speakToMe(self, event): 
        if event.keysym == "Return" or event.num == 1:
            #print count
            self.display.config(state = Tkinter.NORMAL)
            self.entry = self.user_entry.get()
             #self???? TO TEST
            #eliza.stackWrite(str(entry.strip())) #adds user's entry to stack
            self.display.insert(Tkinter.END, "\nVous: "+self.user_entry.get()) #self??? TO TEST
            self.user_entry.delete(0, len(self.user_entry.get()))
            self.send_button.config(state = Tkinter.DISABLED)
            self.user_entry.config(state = Tkinter.DISABLED)
            self.display.config(state = Tkinter.DISABLED)

            response = self.eliza.setInput(self.entry) 
            #appelle toutes fonctions dans eliza

            #AJOUTER ETAPES DE REPONSE
            self.hereComesYourAnswer()#premiere etape de calcul de reponse
            #self.itsTheFinalCountdown()
            #print self.entry

    
    # heresYourAnswer: Takes the final calculated answer from Eliza and displays it in Eliza's window
    
    def hereComesYourAnswer(self):
        answer = self.eliza.getFinalAnswer() #recupere la reponse finale d'eliza
        self.eliza.res_fields()
        #time.sleep(1.5) #illusion de la reflexion
        self.display.config(state = Tkinter.NORMAL)
        self.display.insert(Tkinter.END, "\n"+ answer)
        self.display.config(state = Tkinter.DISABLED)
        self.send_button.config(state = Tkinter.NORMAL)
        self.user_entry.config (state = Tkinter.NORMAL)
        #self.itsTheFinalCountdown()

    
    #counts up to 100 - then calls areYouStillHere to make Eliza talk

    def itsTheFinalCountdown(self):     
    #Attention, prevoir une remise à zéro dés qu'on a une saisie clavier 
        count = 0
        while count < 5:
            time.sleep(1)
            count += 1
            if count == 5:
                self.areYouStillHere()  
                


    #Makes Eliza speak after 100 secs of inactivity from the user
    def areYouStillHere(self): 
        lst = ["Ne voulez-vous pas m'en dire plus?" , "Etes-vous toujours là?" , "Si vous souhaitez de l'aide, il faut me parler!" , "Allons, dites-m'en encore un peu!"]
        i = random.randint(0, len(lst) - 1)  
        self.display.config(state = Tkinter.NORMAL)
        self.display.insert(Tkinter.END, "\n"+ lst[i])
        self.display.config(state = Tkinter.DISABLED)
    

    
    # byThen: NOT FULLY FUNCTIONNAL YET (only clic works and message not displayed)
    
    def byeThen(self, event):
        if event.keysym == "Return" or event.num == 1: 
            self.display.config(state = Tkinter.NORMAL)
            self.display.insert(Tkinter.END, "\n"+ "Passez une bonne journée!")
            self.display.config(state = Tkinter.DISABLED)
            #time.sleep(2) 


   










