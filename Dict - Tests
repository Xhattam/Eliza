# -*- coding: utf-8 -*-


def justPickARandomOne():
  print "random"

def talkToMeMore():
	print "talk please"


ohMyWords = {("Dites m'en plus.", "Dites m'en d'avantage.", "Je vois, continuez.", "Je comprends, continuez.", "Continuez."): justPickARandomOne(), 
("Pourriez-vous m'en dire plus?", "Que voulez-vous dire?", "Pourriez-vous élaborer?", "Pourriez-vous développer sur ce sujet?", 
"Que voulez-vous dire par là?", "Pourriez-vous m'en dire d'avantage?", "Qu'est-ce que cela veut dire pour vous?", "Ceci a-t-il un sens particulier pour vous?",
"Et que ceci vous inspire-t-il?"): talkToMeMore()}

def soThisIsFamily():
	print "family"

def soThisIsNotFamily():
	print "not family"

def moneyMakingActivities():
	print "money money money"

myKeyWords = {("frère", "sœur", "père", "mère", "oncle", "tante", "cousin", "cousine", "grand-père", "grand-mère", "beau-père", 
"belle-mère", "beau-frère", "belle-sœur", "fils", "fille", "beau-fils", "belle-fille", "petit fils", "petite fille"): soThisIsFamily(), 
("femme", "épouse", "mari", "époux", "ami", "amie", "collègue", "patron", "patronne", "voisin", "voisine", "copain", "copine", "petit-ami",
"petite amie", "pote", "propriétaire", "élève", "professeur"): soThisIsNotFamily(),  ("médecin", "docteur", "diététicien", "diététicienne", "électricien", "électricienne", "plombier", "plombier", "architecte", "comptable", 
"boucher", "boulanger", "fromager", "femme de ménage", "pédiatre", "psychologue", "psychiatre", "psychiatre"): moneyMakingActivities()}

def test2():
	return "testestest"


fruits = {("pommes", "poires"): test2(), "poires": 3}

print fruits.values()
print "longueur"
print len(fruits.keys())

def fruitos(string):
	for keys in fruits.keys():
		if len(keys) > 1:
			for words in keys [0: len(keys)]:
				if words == string:
					print ("fruit: ")
				 	return fruits[keys]
				else:
					print "et non"

string = "pommes"
#print fruitos(string)

def test(string):
	for keys in myKeyWords.keys():
		for words in keys [0: len(keys)]:
			if words == string:
				return myKeyWords[keys]
			else:
				return

#print test("oncle")

# for i in ohMyWords.keys():
# 	print i[0]

# if "Continuez." in ohMyWords.keys():
# 	print "Yes, yes it is."
# else:
# 	print "No, no it isn't."
# # whatsTheWordHummingbird[0][1] = "Jean"
# # print whatsTheWordHummingbird[0]
# # print meetTheOthers[1]


Tester si tous les mots clés en dictionnaires est valable ou non.
Des listes triées avec un algo de recherche dichotomique suffiraient-elles?


